//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IStudent")]
public interface IStudent
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/CreateStudent", ReplyAction="http://tempuri.org/IStudent/CreateStudentResponse")]
    System.IAsyncResult BeginCreateStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState);
    
    bool EndCreateStudent(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/DeleteStudent", ReplyAction="http://tempuri.org/IStudent/DeleteStudentResponse")]
    System.IAsyncResult BeginDeleteStudent(string studentNumber, System.AsyncCallback callback, object asyncState);
    
    bool EndDeleteStudent(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/UpdateStudent", ReplyAction="http://tempuri.org/IStudent/UpdateStudentResponse")]
    System.IAsyncResult BeginUpdateStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState);
    
    bool EndUpdateStudent(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/SearchStudentsByFirstName", ReplyAction="http://tempuri.org/IStudent/SearchStudentsByFirstNameResponse")]
    System.IAsyncResult BeginSearchStudentsByFirstName(string firstName, System.AsyncCallback callback, object asyncState);
    
    string EndSearchStudentsByFirstName(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/SearchStudentsBySurname", ReplyAction="http://tempuri.org/IStudent/SearchStudentsBySurnameResponse")]
    System.IAsyncResult BeginSearchStudentsBySurname(string surname, System.AsyncCallback callback, object asyncState);
    
    string EndSearchStudentsBySurname(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudent/SearchStudentByStudentNumber", ReplyAction="http://tempuri.org/IStudent/SearchStudentByStudentNumberResponse")]
    System.IAsyncResult BeginSearchStudentByStudentNumber(string studentNumber, System.AsyncCallback callback, object asyncState);
    
    string EndSearchStudentByStudentNumber(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IStudentChannel : IStudent, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CreateStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public CreateStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DeleteStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SearchStudentsByFirstNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public SearchStudentsByFirstNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SearchStudentsBySurnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public SearchStudentsBySurnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class SearchStudentByStudentNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public SearchStudentByStudentNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class StudentClient : System.ServiceModel.ClientBase<IStudent>, IStudent
{
    
    private BeginOperationDelegate onBeginCreateStudentDelegate;
    
    private EndOperationDelegate onEndCreateStudentDelegate;
    
    private System.Threading.SendOrPostCallback onCreateStudentCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteStudentDelegate;
    
    private EndOperationDelegate onEndDeleteStudentDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteStudentCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateStudentDelegate;
    
    private EndOperationDelegate onEndUpdateStudentDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateStudentCompletedDelegate;
    
    private BeginOperationDelegate onBeginSearchStudentsByFirstNameDelegate;
    
    private EndOperationDelegate onEndSearchStudentsByFirstNameDelegate;
    
    private System.Threading.SendOrPostCallback onSearchStudentsByFirstNameCompletedDelegate;
    
    private BeginOperationDelegate onBeginSearchStudentsBySurnameDelegate;
    
    private EndOperationDelegate onEndSearchStudentsBySurnameDelegate;
    
    private System.Threading.SendOrPostCallback onSearchStudentsBySurnameCompletedDelegate;
    
    private BeginOperationDelegate onBeginSearchStudentByStudentNumberDelegate;
    
    private EndOperationDelegate onEndSearchStudentByStudentNumberDelegate;
    
    private System.Threading.SendOrPostCallback onSearchStudentByStudentNumberCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public StudentClient()
    {
    }
    
    public StudentClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public StudentClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public StudentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public StudentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<CreateStudentCompletedEventArgs> CreateStudentCompleted;
    
    public event System.EventHandler<DeleteStudentCompletedEventArgs> DeleteStudentCompleted;
    
    public event System.EventHandler<UpdateStudentCompletedEventArgs> UpdateStudentCompleted;
    
    public event System.EventHandler<SearchStudentsByFirstNameCompletedEventArgs> SearchStudentsByFirstNameCompleted;
    
    public event System.EventHandler<SearchStudentsBySurnameCompletedEventArgs> SearchStudentsBySurnameCompleted;
    
    public event System.EventHandler<SearchStudentByStudentNumberCompletedEventArgs> SearchStudentByStudentNumberCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStudent.BeginCreateStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCreateStudent(studentNumber, firstName, surname, email, password, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IStudent.EndCreateStudent(System.IAsyncResult result)
    {
        return base.Channel.EndCreateStudent(result);
    }
    
    private System.IAsyncResult OnBeginCreateStudent(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string studentNumber = ((string)(inValues[0]));
        string firstName = ((string)(inValues[1]));
        string surname = ((string)(inValues[2]));
        string email = ((string)(inValues[3]));
        string password = ((string)(inValues[4]));
        return ((IStudent)(this)).BeginCreateStudent(studentNumber, firstName, surname, email, password, callback, asyncState);
    }
    
    private object[] OnEndCreateStudent(System.IAsyncResult result)
    {
        bool retVal = ((IStudent)(this)).EndCreateStudent(result);
        return new object[] {
                retVal};
    }
    
    private void OnCreateStudentCompleted(object state)
    {
        if ((this.CreateStudentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CreateStudentCompleted(this, new CreateStudentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CreateStudentAsync(string studentNumber, string firstName, string surname, string email, string password)
    {
        this.CreateStudentAsync(studentNumber, firstName, surname, email, password, null);
    }
    
    public void CreateStudentAsync(string studentNumber, string firstName, string surname, string email, string password, object userState)
    {
        if ((this.onBeginCreateStudentDelegate == null))
        {
            this.onBeginCreateStudentDelegate = new BeginOperationDelegate(this.OnBeginCreateStudent);
        }
        if ((this.onEndCreateStudentDelegate == null))
        {
            this.onEndCreateStudentDelegate = new EndOperationDelegate(this.OnEndCreateStudent);
        }
        if ((this.onCreateStudentCompletedDelegate == null))
        {
            this.onCreateStudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateStudentCompleted);
        }
        base.InvokeAsync(this.onBeginCreateStudentDelegate, new object[] {
                    studentNumber,
                    firstName,
                    surname,
                    email,
                    password}, this.onEndCreateStudentDelegate, this.onCreateStudentCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStudent.BeginDeleteStudent(string studentNumber, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteStudent(studentNumber, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IStudent.EndDeleteStudent(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteStudent(result);
    }
    
    private System.IAsyncResult OnBeginDeleteStudent(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string studentNumber = ((string)(inValues[0]));
        return ((IStudent)(this)).BeginDeleteStudent(studentNumber, callback, asyncState);
    }
    
    private object[] OnEndDeleteStudent(System.IAsyncResult result)
    {
        bool retVal = ((IStudent)(this)).EndDeleteStudent(result);
        return new object[] {
                retVal};
    }
    
    private void OnDeleteStudentCompleted(object state)
    {
        if ((this.DeleteStudentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteStudentCompleted(this, new DeleteStudentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteStudentAsync(string studentNumber)
    {
        this.DeleteStudentAsync(studentNumber, null);
    }
    
    public void DeleteStudentAsync(string studentNumber, object userState)
    {
        if ((this.onBeginDeleteStudentDelegate == null))
        {
            this.onBeginDeleteStudentDelegate = new BeginOperationDelegate(this.OnBeginDeleteStudent);
        }
        if ((this.onEndDeleteStudentDelegate == null))
        {
            this.onEndDeleteStudentDelegate = new EndOperationDelegate(this.OnEndDeleteStudent);
        }
        if ((this.onDeleteStudentCompletedDelegate == null))
        {
            this.onDeleteStudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStudentCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteStudentDelegate, new object[] {
                    studentNumber}, this.onEndDeleteStudentDelegate, this.onDeleteStudentCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStudent.BeginUpdateStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateStudent(studentNumber, firstName, surname, email, password, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IStudent.EndUpdateStudent(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateStudent(result);
    }
    
    private System.IAsyncResult OnBeginUpdateStudent(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string studentNumber = ((string)(inValues[0]));
        string firstName = ((string)(inValues[1]));
        string surname = ((string)(inValues[2]));
        string email = ((string)(inValues[3]));
        string password = ((string)(inValues[4]));
        return ((IStudent)(this)).BeginUpdateStudent(studentNumber, firstName, surname, email, password, callback, asyncState);
    }
    
    private object[] OnEndUpdateStudent(System.IAsyncResult result)
    {
        bool retVal = ((IStudent)(this)).EndUpdateStudent(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateStudentCompleted(object state)
    {
        if ((this.UpdateStudentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateStudentCompleted(this, new UpdateStudentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateStudentAsync(string studentNumber, string firstName, string surname, string email, string password)
    {
        this.UpdateStudentAsync(studentNumber, firstName, surname, email, password, null);
    }
    
    public void UpdateStudentAsync(string studentNumber, string firstName, string surname, string email, string password, object userState)
    {
        if ((this.onBeginUpdateStudentDelegate == null))
        {
            this.onBeginUpdateStudentDelegate = new BeginOperationDelegate(this.OnBeginUpdateStudent);
        }
        if ((this.onEndUpdateStudentDelegate == null))
        {
            this.onEndUpdateStudentDelegate = new EndOperationDelegate(this.OnEndUpdateStudent);
        }
        if ((this.onUpdateStudentCompletedDelegate == null))
        {
            this.onUpdateStudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateStudentCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateStudentDelegate, new object[] {
                    studentNumber,
                    firstName,
                    surname,
                    email,
                    password}, this.onEndUpdateStudentDelegate, this.onUpdateStudentCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStudent.BeginSearchStudentsByFirstName(string firstName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSearchStudentsByFirstName(firstName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IStudent.EndSearchStudentsByFirstName(System.IAsyncResult result)
    {
        return base.Channel.EndSearchStudentsByFirstName(result);
    }
    
    private System.IAsyncResult OnBeginSearchStudentsByFirstName(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string firstName = ((string)(inValues[0]));
        return ((IStudent)(this)).BeginSearchStudentsByFirstName(firstName, callback, asyncState);
    }
    
    private object[] OnEndSearchStudentsByFirstName(System.IAsyncResult result)
    {
        string retVal = ((IStudent)(this)).EndSearchStudentsByFirstName(result);
        return new object[] {
                retVal};
    }
    
    private void OnSearchStudentsByFirstNameCompleted(object state)
    {
        if ((this.SearchStudentsByFirstNameCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SearchStudentsByFirstNameCompleted(this, new SearchStudentsByFirstNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SearchStudentsByFirstNameAsync(string firstName)
    {
        this.SearchStudentsByFirstNameAsync(firstName, null);
    }
    
    public void SearchStudentsByFirstNameAsync(string firstName, object userState)
    {
        if ((this.onBeginSearchStudentsByFirstNameDelegate == null))
        {
            this.onBeginSearchStudentsByFirstNameDelegate = new BeginOperationDelegate(this.OnBeginSearchStudentsByFirstName);
        }
        if ((this.onEndSearchStudentsByFirstNameDelegate == null))
        {
            this.onEndSearchStudentsByFirstNameDelegate = new EndOperationDelegate(this.OnEndSearchStudentsByFirstName);
        }
        if ((this.onSearchStudentsByFirstNameCompletedDelegate == null))
        {
            this.onSearchStudentsByFirstNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchStudentsByFirstNameCompleted);
        }
        base.InvokeAsync(this.onBeginSearchStudentsByFirstNameDelegate, new object[] {
                    firstName}, this.onEndSearchStudentsByFirstNameDelegate, this.onSearchStudentsByFirstNameCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStudent.BeginSearchStudentsBySurname(string surname, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSearchStudentsBySurname(surname, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IStudent.EndSearchStudentsBySurname(System.IAsyncResult result)
    {
        return base.Channel.EndSearchStudentsBySurname(result);
    }
    
    private System.IAsyncResult OnBeginSearchStudentsBySurname(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string surname = ((string)(inValues[0]));
        return ((IStudent)(this)).BeginSearchStudentsBySurname(surname, callback, asyncState);
    }
    
    private object[] OnEndSearchStudentsBySurname(System.IAsyncResult result)
    {
        string retVal = ((IStudent)(this)).EndSearchStudentsBySurname(result);
        return new object[] {
                retVal};
    }
    
    private void OnSearchStudentsBySurnameCompleted(object state)
    {
        if ((this.SearchStudentsBySurnameCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SearchStudentsBySurnameCompleted(this, new SearchStudentsBySurnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SearchStudentsBySurnameAsync(string surname)
    {
        this.SearchStudentsBySurnameAsync(surname, null);
    }
    
    public void SearchStudentsBySurnameAsync(string surname, object userState)
    {
        if ((this.onBeginSearchStudentsBySurnameDelegate == null))
        {
            this.onBeginSearchStudentsBySurnameDelegate = new BeginOperationDelegate(this.OnBeginSearchStudentsBySurname);
        }
        if ((this.onEndSearchStudentsBySurnameDelegate == null))
        {
            this.onEndSearchStudentsBySurnameDelegate = new EndOperationDelegate(this.OnEndSearchStudentsBySurname);
        }
        if ((this.onSearchStudentsBySurnameCompletedDelegate == null))
        {
            this.onSearchStudentsBySurnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchStudentsBySurnameCompleted);
        }
        base.InvokeAsync(this.onBeginSearchStudentsBySurnameDelegate, new object[] {
                    surname}, this.onEndSearchStudentsBySurnameDelegate, this.onSearchStudentsBySurnameCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IStudent.BeginSearchStudentByStudentNumber(string studentNumber, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSearchStudentByStudentNumber(studentNumber, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IStudent.EndSearchStudentByStudentNumber(System.IAsyncResult result)
    {
        return base.Channel.EndSearchStudentByStudentNumber(result);
    }
    
    private System.IAsyncResult OnBeginSearchStudentByStudentNumber(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string studentNumber = ((string)(inValues[0]));
        return ((IStudent)(this)).BeginSearchStudentByStudentNumber(studentNumber, callback, asyncState);
    }
    
    private object[] OnEndSearchStudentByStudentNumber(System.IAsyncResult result)
    {
        string retVal = ((IStudent)(this)).EndSearchStudentByStudentNumber(result);
        return new object[] {
                retVal};
    }
    
    private void OnSearchStudentByStudentNumberCompleted(object state)
    {
        if ((this.SearchStudentByStudentNumberCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SearchStudentByStudentNumberCompleted(this, new SearchStudentByStudentNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SearchStudentByStudentNumberAsync(string studentNumber)
    {
        this.SearchStudentByStudentNumberAsync(studentNumber, null);
    }
    
    public void SearchStudentByStudentNumberAsync(string studentNumber, object userState)
    {
        if ((this.onBeginSearchStudentByStudentNumberDelegate == null))
        {
            this.onBeginSearchStudentByStudentNumberDelegate = new BeginOperationDelegate(this.OnBeginSearchStudentByStudentNumber);
        }
        if ((this.onEndSearchStudentByStudentNumberDelegate == null))
        {
            this.onEndSearchStudentByStudentNumberDelegate = new EndOperationDelegate(this.OnEndSearchStudentByStudentNumber);
        }
        if ((this.onSearchStudentByStudentNumberCompletedDelegate == null))
        {
            this.onSearchStudentByStudentNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchStudentByStudentNumberCompleted);
        }
        base.InvokeAsync(this.onBeginSearchStudentByStudentNumberDelegate, new object[] {
                    studentNumber}, this.onEndSearchStudentByStudentNumberDelegate, this.onSearchStudentByStudentNumberCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IStudent CreateChannel()
    {
        return new StudentClientChannel(this);
    }
    
    private class StudentClientChannel : ChannelBase<IStudent>, IStudent
    {
        
        public StudentClientChannel(System.ServiceModel.ClientBase<IStudent> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginCreateStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[5];
            _args[0] = studentNumber;
            _args[1] = firstName;
            _args[2] = surname;
            _args[3] = email;
            _args[4] = password;
            System.IAsyncResult _result = base.BeginInvoke("CreateStudent", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndCreateStudent(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("CreateStudent", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDeleteStudent(string studentNumber, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = studentNumber;
            System.IAsyncResult _result = base.BeginInvoke("DeleteStudent", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndDeleteStudent(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("DeleteStudent", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUpdateStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[5];
            _args[0] = studentNumber;
            _args[1] = firstName;
            _args[2] = surname;
            _args[3] = email;
            _args[4] = password;
            System.IAsyncResult _result = base.BeginInvoke("UpdateStudent", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndUpdateStudent(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("UpdateStudent", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSearchStudentsByFirstName(string firstName, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = firstName;
            System.IAsyncResult _result = base.BeginInvoke("SearchStudentsByFirstName", _args, callback, asyncState);
            return _result;
        }
        
        public string EndSearchStudentsByFirstName(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("SearchStudentsByFirstName", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSearchStudentsBySurname(string surname, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = surname;
            System.IAsyncResult _result = base.BeginInvoke("SearchStudentsBySurname", _args, callback, asyncState);
            return _result;
        }
        
        public string EndSearchStudentsBySurname(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("SearchStudentsBySurname", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSearchStudentByStudentNumber(string studentNumber, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = studentNumber;
            System.IAsyncResult _result = base.BeginInvoke("SearchStudentByStudentNumber", _args, callback, asyncState);
            return _result;
        }
        
        public string EndSearchStudentByStudentNumber(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("SearchStudentByStudentNumber", _args, result)));
            return _result;
        }
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ICampus")]
public interface ICampus
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICampus/AddCampus", ReplyAction="http://tempuri.org/ICampus/AddCampusResponse")]
    System.IAsyncResult BeginAddCampus(string name, System.AsyncCallback callback, object asyncState);
    
    bool EndAddCampus(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICampus/DeleteCampus", ReplyAction="http://tempuri.org/ICampus/DeleteCampusResponse")]
    System.IAsyncResult BeginDeleteCampus(int campusID, System.AsyncCallback callback, object asyncState);
    
    bool EndDeleteCampus(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICampus/GetAllCampuses", ReplyAction="http://tempuri.org/ICampus/GetAllCampusesResponse")]
    System.IAsyncResult BeginGetAllCampuses(System.AsyncCallback callback, object asyncState);
    
    string EndGetAllCampuses(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICampus/GetCampusByClassroom", ReplyAction="http://tempuri.org/ICampus/GetCampusByClassroomResponse")]
    System.IAsyncResult BeginGetCampusByClassroom(int classroomID, System.AsyncCallback callback, object asyncState);
    
    string EndGetCampusByClassroom(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ICampusChannel : ICampus, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public AddCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DeleteCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllCampusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllCampusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCampusByClassroomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetCampusByClassroomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CampusClient : System.ServiceModel.ClientBase<ICampus>, ICampus
{
    
    private BeginOperationDelegate onBeginAddCampusDelegate;
    
    private EndOperationDelegate onEndAddCampusDelegate;
    
    private System.Threading.SendOrPostCallback onAddCampusCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteCampusDelegate;
    
    private EndOperationDelegate onEndDeleteCampusDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteCampusCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllCampusesDelegate;
    
    private EndOperationDelegate onEndGetAllCampusesDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllCampusesCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetCampusByClassroomDelegate;
    
    private EndOperationDelegate onEndGetCampusByClassroomDelegate;
    
    private System.Threading.SendOrPostCallback onGetCampusByClassroomCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public CampusClient()
    {
    }
    
    public CampusClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public CampusClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CampusClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CampusClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<AddCampusCompletedEventArgs> AddCampusCompleted;
    
    public event System.EventHandler<DeleteCampusCompletedEventArgs> DeleteCampusCompleted;
    
    public event System.EventHandler<GetAllCampusesCompletedEventArgs> GetAllCampusesCompleted;
    
    public event System.EventHandler<GetCampusByClassroomCompletedEventArgs> GetCampusByClassroomCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICampus.BeginAddCampus(string name, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddCampus(name, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool ICampus.EndAddCampus(System.IAsyncResult result)
    {
        return base.Channel.EndAddCampus(result);
    }
    
    private System.IAsyncResult OnBeginAddCampus(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string name = ((string)(inValues[0]));
        return ((ICampus)(this)).BeginAddCampus(name, callback, asyncState);
    }
    
    private object[] OnEndAddCampus(System.IAsyncResult result)
    {
        bool retVal = ((ICampus)(this)).EndAddCampus(result);
        return new object[] {
                retVal};
    }
    
    private void OnAddCampusCompleted(object state)
    {
        if ((this.AddCampusCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddCampusCompleted(this, new AddCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AddCampusAsync(string name)
    {
        this.AddCampusAsync(name, null);
    }
    
    public void AddCampusAsync(string name, object userState)
    {
        if ((this.onBeginAddCampusDelegate == null))
        {
            this.onBeginAddCampusDelegate = new BeginOperationDelegate(this.OnBeginAddCampus);
        }
        if ((this.onEndAddCampusDelegate == null))
        {
            this.onEndAddCampusDelegate = new EndOperationDelegate(this.OnEndAddCampus);
        }
        if ((this.onAddCampusCompletedDelegate == null))
        {
            this.onAddCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCampusCompleted);
        }
        base.InvokeAsync(this.onBeginAddCampusDelegate, new object[] {
                    name}, this.onEndAddCampusDelegate, this.onAddCampusCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICampus.BeginDeleteCampus(int campusID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteCampus(campusID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool ICampus.EndDeleteCampus(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteCampus(result);
    }
    
    private System.IAsyncResult OnBeginDeleteCampus(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int campusID = ((int)(inValues[0]));
        return ((ICampus)(this)).BeginDeleteCampus(campusID, callback, asyncState);
    }
    
    private object[] OnEndDeleteCampus(System.IAsyncResult result)
    {
        bool retVal = ((ICampus)(this)).EndDeleteCampus(result);
        return new object[] {
                retVal};
    }
    
    private void OnDeleteCampusCompleted(object state)
    {
        if ((this.DeleteCampusCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteCampusCompleted(this, new DeleteCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteCampusAsync(int campusID)
    {
        this.DeleteCampusAsync(campusID, null);
    }
    
    public void DeleteCampusAsync(int campusID, object userState)
    {
        if ((this.onBeginDeleteCampusDelegate == null))
        {
            this.onBeginDeleteCampusDelegate = new BeginOperationDelegate(this.OnBeginDeleteCampus);
        }
        if ((this.onEndDeleteCampusDelegate == null))
        {
            this.onEndDeleteCampusDelegate = new EndOperationDelegate(this.OnEndDeleteCampus);
        }
        if ((this.onDeleteCampusCompletedDelegate == null))
        {
            this.onDeleteCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCampusCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteCampusDelegate, new object[] {
                    campusID}, this.onEndDeleteCampusDelegate, this.onDeleteCampusCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICampus.BeginGetAllCampuses(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllCampuses(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string ICampus.EndGetAllCampuses(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllCampuses(result);
    }
    
    private System.IAsyncResult OnBeginGetAllCampuses(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((ICampus)(this)).BeginGetAllCampuses(callback, asyncState);
    }
    
    private object[] OnEndGetAllCampuses(System.IAsyncResult result)
    {
        string retVal = ((ICampus)(this)).EndGetAllCampuses(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllCampusesCompleted(object state)
    {
        if ((this.GetAllCampusesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllCampusesCompleted(this, new GetAllCampusesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllCampusesAsync()
    {
        this.GetAllCampusesAsync(null);
    }
    
    public void GetAllCampusesAsync(object userState)
    {
        if ((this.onBeginGetAllCampusesDelegate == null))
        {
            this.onBeginGetAllCampusesDelegate = new BeginOperationDelegate(this.OnBeginGetAllCampuses);
        }
        if ((this.onEndGetAllCampusesDelegate == null))
        {
            this.onEndGetAllCampusesDelegate = new EndOperationDelegate(this.OnEndGetAllCampuses);
        }
        if ((this.onGetAllCampusesCompletedDelegate == null))
        {
            this.onGetAllCampusesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCampusesCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllCampusesDelegate, null, this.onEndGetAllCampusesDelegate, this.onGetAllCampusesCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICampus.BeginGetCampusByClassroom(int classroomID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCampusByClassroom(classroomID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string ICampus.EndGetCampusByClassroom(System.IAsyncResult result)
    {
        return base.Channel.EndGetCampusByClassroom(result);
    }
    
    private System.IAsyncResult OnBeginGetCampusByClassroom(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int classroomID = ((int)(inValues[0]));
        return ((ICampus)(this)).BeginGetCampusByClassroom(classroomID, callback, asyncState);
    }
    
    private object[] OnEndGetCampusByClassroom(System.IAsyncResult result)
    {
        string retVal = ((ICampus)(this)).EndGetCampusByClassroom(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetCampusByClassroomCompleted(object state)
    {
        if ((this.GetCampusByClassroomCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCampusByClassroomCompleted(this, new GetCampusByClassroomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetCampusByClassroomAsync(int classroomID)
    {
        this.GetCampusByClassroomAsync(classroomID, null);
    }
    
    public void GetCampusByClassroomAsync(int classroomID, object userState)
    {
        if ((this.onBeginGetCampusByClassroomDelegate == null))
        {
            this.onBeginGetCampusByClassroomDelegate = new BeginOperationDelegate(this.OnBeginGetCampusByClassroom);
        }
        if ((this.onEndGetCampusByClassroomDelegate == null))
        {
            this.onEndGetCampusByClassroomDelegate = new EndOperationDelegate(this.OnEndGetCampusByClassroom);
        }
        if ((this.onGetCampusByClassroomCompletedDelegate == null))
        {
            this.onGetCampusByClassroomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCampusByClassroomCompleted);
        }
        base.InvokeAsync(this.onBeginGetCampusByClassroomDelegate, new object[] {
                    classroomID}, this.onEndGetCampusByClassroomDelegate, this.onGetCampusByClassroomCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override ICampus CreateChannel()
    {
        return new CampusClientChannel(this);
    }
    
    private class CampusClientChannel : ChannelBase<ICampus>, ICampus
    {
        
        public CampusClientChannel(System.ServiceModel.ClientBase<ICampus> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginAddCampus(string name, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = name;
            System.IAsyncResult _result = base.BeginInvoke("AddCampus", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndAddCampus(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("AddCampus", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDeleteCampus(int campusID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = campusID;
            System.IAsyncResult _result = base.BeginInvoke("DeleteCampus", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndDeleteCampus(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("DeleteCampus", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllCampuses(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAllCampuses", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllCampuses(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllCampuses", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetCampusByClassroom(int classroomID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = classroomID;
            System.IAsyncResult _result = base.BeginInvoke("GetCampusByClassroom", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetCampusByClassroom(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetCampusByClassroom", _args, result)));
            return _result;
        }
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IClass")]
public interface IClass
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/AddClass", ReplyAction="http://tempuri.org/IClass/AddClassResponse")]
    System.IAsyncResult BeginAddClass(string newClass, System.AsyncCallback callback, object asyncState);
    
    bool EndAddClass(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/DeleteClass", ReplyAction="http://tempuri.org/IClass/DeleteClassResponse")]
    System.IAsyncResult BeginDeleteClass(int classID, System.AsyncCallback callback, object asyncState);
    
    bool EndDeleteClass(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/UpdateClass", ReplyAction="http://tempuri.org/IClass/UpdateClassResponse")]
    System.IAsyncResult BeginUpdateClass(string updatedClass, System.AsyncCallback callback, object asyncState);
    
    bool EndUpdateClass(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/GetAllClasses", ReplyAction="http://tempuri.org/IClass/GetAllClassesResponse")]
    System.IAsyncResult BeginGetAllClasses(System.AsyncCallback callback, object asyncState);
    
    string EndGetAllClasses(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/GetAllClassesByCourse", ReplyAction="http://tempuri.org/IClass/GetAllClassesByCourseResponse")]
    System.IAsyncResult BeginGetAllClassesByCourse(int courseID, System.AsyncCallback callback, object asyncState);
    
    string EndGetAllClassesByCourse(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/GetAllClassesByDate", ReplyAction="http://tempuri.org/IClass/GetAllClassesByDateResponse")]
    System.IAsyncResult BeginGetAllClassesByDate(System.DateTime classDate, System.AsyncCallback callback, object asyncState);
    
    string EndGetAllClassesByDate(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/GetAllClassesByClassroom", ReplyAction="http://tempuri.org/IClass/GetAllClassesByClassroomResponse")]
    System.IAsyncResult BeginGetAllClassesByClassroom(int classroomID, System.AsyncCallback callback, object asyncState);
    
    string EndGetAllClassesByClassroom(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClass/GetClassesByName", ReplyAction="http://tempuri.org/IClass/GetClassesByNameResponse")]
    System.IAsyncResult BeginGetClassesByName(string name, System.AsyncCallback callback, object asyncState);
    
    string EndGetClassesByName(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IClassChannel : IClass, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public AddClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DeleteClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllClassesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllClassesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllClassesByCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllClassesByCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllClassesByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllClassesByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllClassesByClassroomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllClassesByClassroomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetClassesByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetClassesByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ClassClient : System.ServiceModel.ClientBase<IClass>, IClass
{
    
    private BeginOperationDelegate onBeginAddClassDelegate;
    
    private EndOperationDelegate onEndAddClassDelegate;
    
    private System.Threading.SendOrPostCallback onAddClassCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteClassDelegate;
    
    private EndOperationDelegate onEndDeleteClassDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteClassCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateClassDelegate;
    
    private EndOperationDelegate onEndUpdateClassDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateClassCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllClassesDelegate;
    
    private EndOperationDelegate onEndGetAllClassesDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllClassesCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllClassesByCourseDelegate;
    
    private EndOperationDelegate onEndGetAllClassesByCourseDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllClassesByCourseCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllClassesByDateDelegate;
    
    private EndOperationDelegate onEndGetAllClassesByDateDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllClassesByDateCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllClassesByClassroomDelegate;
    
    private EndOperationDelegate onEndGetAllClassesByClassroomDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllClassesByClassroomCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetClassesByNameDelegate;
    
    private EndOperationDelegate onEndGetClassesByNameDelegate;
    
    private System.Threading.SendOrPostCallback onGetClassesByNameCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public ClassClient()
    {
    }
    
    public ClassClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ClassClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ClassClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ClassClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<AddClassCompletedEventArgs> AddClassCompleted;
    
    public event System.EventHandler<DeleteClassCompletedEventArgs> DeleteClassCompleted;
    
    public event System.EventHandler<UpdateClassCompletedEventArgs> UpdateClassCompleted;
    
    public event System.EventHandler<GetAllClassesCompletedEventArgs> GetAllClassesCompleted;
    
    public event System.EventHandler<GetAllClassesByCourseCompletedEventArgs> GetAllClassesByCourseCompleted;
    
    public event System.EventHandler<GetAllClassesByDateCompletedEventArgs> GetAllClassesByDateCompleted;
    
    public event System.EventHandler<GetAllClassesByClassroomCompletedEventArgs> GetAllClassesByClassroomCompleted;
    
    public event System.EventHandler<GetClassesByNameCompletedEventArgs> GetClassesByNameCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginAddClass(string newClass, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddClass(newClass, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IClass.EndAddClass(System.IAsyncResult result)
    {
        return base.Channel.EndAddClass(result);
    }
    
    private System.IAsyncResult OnBeginAddClass(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string newClass = ((string)(inValues[0]));
        return ((IClass)(this)).BeginAddClass(newClass, callback, asyncState);
    }
    
    private object[] OnEndAddClass(System.IAsyncResult result)
    {
        bool retVal = ((IClass)(this)).EndAddClass(result);
        return new object[] {
                retVal};
    }
    
    private void OnAddClassCompleted(object state)
    {
        if ((this.AddClassCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddClassCompleted(this, new AddClassCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AddClassAsync(string newClass)
    {
        this.AddClassAsync(newClass, null);
    }
    
    public void AddClassAsync(string newClass, object userState)
    {
        if ((this.onBeginAddClassDelegate == null))
        {
            this.onBeginAddClassDelegate = new BeginOperationDelegate(this.OnBeginAddClass);
        }
        if ((this.onEndAddClassDelegate == null))
        {
            this.onEndAddClassDelegate = new EndOperationDelegate(this.OnEndAddClass);
        }
        if ((this.onAddClassCompletedDelegate == null))
        {
            this.onAddClassCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddClassCompleted);
        }
        base.InvokeAsync(this.onBeginAddClassDelegate, new object[] {
                    newClass}, this.onEndAddClassDelegate, this.onAddClassCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginDeleteClass(int classID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteClass(classID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IClass.EndDeleteClass(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteClass(result);
    }
    
    private System.IAsyncResult OnBeginDeleteClass(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int classID = ((int)(inValues[0]));
        return ((IClass)(this)).BeginDeleteClass(classID, callback, asyncState);
    }
    
    private object[] OnEndDeleteClass(System.IAsyncResult result)
    {
        bool retVal = ((IClass)(this)).EndDeleteClass(result);
        return new object[] {
                retVal};
    }
    
    private void OnDeleteClassCompleted(object state)
    {
        if ((this.DeleteClassCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteClassCompleted(this, new DeleteClassCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteClassAsync(int classID)
    {
        this.DeleteClassAsync(classID, null);
    }
    
    public void DeleteClassAsync(int classID, object userState)
    {
        if ((this.onBeginDeleteClassDelegate == null))
        {
            this.onBeginDeleteClassDelegate = new BeginOperationDelegate(this.OnBeginDeleteClass);
        }
        if ((this.onEndDeleteClassDelegate == null))
        {
            this.onEndDeleteClassDelegate = new EndOperationDelegate(this.OnEndDeleteClass);
        }
        if ((this.onDeleteClassCompletedDelegate == null))
        {
            this.onDeleteClassCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteClassCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteClassDelegate, new object[] {
                    classID}, this.onEndDeleteClassDelegate, this.onDeleteClassCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginUpdateClass(string updatedClass, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateClass(updatedClass, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IClass.EndUpdateClass(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateClass(result);
    }
    
    private System.IAsyncResult OnBeginUpdateClass(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string updatedClass = ((string)(inValues[0]));
        return ((IClass)(this)).BeginUpdateClass(updatedClass, callback, asyncState);
    }
    
    private object[] OnEndUpdateClass(System.IAsyncResult result)
    {
        bool retVal = ((IClass)(this)).EndUpdateClass(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateClassCompleted(object state)
    {
        if ((this.UpdateClassCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateClassCompleted(this, new UpdateClassCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateClassAsync(string updatedClass)
    {
        this.UpdateClassAsync(updatedClass, null);
    }
    
    public void UpdateClassAsync(string updatedClass, object userState)
    {
        if ((this.onBeginUpdateClassDelegate == null))
        {
            this.onBeginUpdateClassDelegate = new BeginOperationDelegate(this.OnBeginUpdateClass);
        }
        if ((this.onEndUpdateClassDelegate == null))
        {
            this.onEndUpdateClassDelegate = new EndOperationDelegate(this.OnEndUpdateClass);
        }
        if ((this.onUpdateClassCompletedDelegate == null))
        {
            this.onUpdateClassCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateClassCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateClassDelegate, new object[] {
                    updatedClass}, this.onEndUpdateClassDelegate, this.onUpdateClassCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginGetAllClasses(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllClasses(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IClass.EndGetAllClasses(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllClasses(result);
    }
    
    private System.IAsyncResult OnBeginGetAllClasses(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IClass)(this)).BeginGetAllClasses(callback, asyncState);
    }
    
    private object[] OnEndGetAllClasses(System.IAsyncResult result)
    {
        string retVal = ((IClass)(this)).EndGetAllClasses(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllClassesCompleted(object state)
    {
        if ((this.GetAllClassesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllClassesCompleted(this, new GetAllClassesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllClassesAsync()
    {
        this.GetAllClassesAsync(null);
    }
    
    public void GetAllClassesAsync(object userState)
    {
        if ((this.onBeginGetAllClassesDelegate == null))
        {
            this.onBeginGetAllClassesDelegate = new BeginOperationDelegate(this.OnBeginGetAllClasses);
        }
        if ((this.onEndGetAllClassesDelegate == null))
        {
            this.onEndGetAllClassesDelegate = new EndOperationDelegate(this.OnEndGetAllClasses);
        }
        if ((this.onGetAllClassesCompletedDelegate == null))
        {
            this.onGetAllClassesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClassesCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllClassesDelegate, null, this.onEndGetAllClassesDelegate, this.onGetAllClassesCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginGetAllClassesByCourse(int courseID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllClassesByCourse(courseID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IClass.EndGetAllClassesByCourse(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllClassesByCourse(result);
    }
    
    private System.IAsyncResult OnBeginGetAllClassesByCourse(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int courseID = ((int)(inValues[0]));
        return ((IClass)(this)).BeginGetAllClassesByCourse(courseID, callback, asyncState);
    }
    
    private object[] OnEndGetAllClassesByCourse(System.IAsyncResult result)
    {
        string retVal = ((IClass)(this)).EndGetAllClassesByCourse(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllClassesByCourseCompleted(object state)
    {
        if ((this.GetAllClassesByCourseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllClassesByCourseCompleted(this, new GetAllClassesByCourseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllClassesByCourseAsync(int courseID)
    {
        this.GetAllClassesByCourseAsync(courseID, null);
    }
    
    public void GetAllClassesByCourseAsync(int courseID, object userState)
    {
        if ((this.onBeginGetAllClassesByCourseDelegate == null))
        {
            this.onBeginGetAllClassesByCourseDelegate = new BeginOperationDelegate(this.OnBeginGetAllClassesByCourse);
        }
        if ((this.onEndGetAllClassesByCourseDelegate == null))
        {
            this.onEndGetAllClassesByCourseDelegate = new EndOperationDelegate(this.OnEndGetAllClassesByCourse);
        }
        if ((this.onGetAllClassesByCourseCompletedDelegate == null))
        {
            this.onGetAllClassesByCourseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClassesByCourseCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllClassesByCourseDelegate, new object[] {
                    courseID}, this.onEndGetAllClassesByCourseDelegate, this.onGetAllClassesByCourseCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginGetAllClassesByDate(System.DateTime classDate, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllClassesByDate(classDate, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IClass.EndGetAllClassesByDate(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllClassesByDate(result);
    }
    
    private System.IAsyncResult OnBeginGetAllClassesByDate(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.DateTime classDate = ((System.DateTime)(inValues[0]));
        return ((IClass)(this)).BeginGetAllClassesByDate(classDate, callback, asyncState);
    }
    
    private object[] OnEndGetAllClassesByDate(System.IAsyncResult result)
    {
        string retVal = ((IClass)(this)).EndGetAllClassesByDate(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllClassesByDateCompleted(object state)
    {
        if ((this.GetAllClassesByDateCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllClassesByDateCompleted(this, new GetAllClassesByDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllClassesByDateAsync(System.DateTime classDate)
    {
        this.GetAllClassesByDateAsync(classDate, null);
    }
    
    public void GetAllClassesByDateAsync(System.DateTime classDate, object userState)
    {
        if ((this.onBeginGetAllClassesByDateDelegate == null))
        {
            this.onBeginGetAllClassesByDateDelegate = new BeginOperationDelegate(this.OnBeginGetAllClassesByDate);
        }
        if ((this.onEndGetAllClassesByDateDelegate == null))
        {
            this.onEndGetAllClassesByDateDelegate = new EndOperationDelegate(this.OnEndGetAllClassesByDate);
        }
        if ((this.onGetAllClassesByDateCompletedDelegate == null))
        {
            this.onGetAllClassesByDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClassesByDateCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllClassesByDateDelegate, new object[] {
                    classDate}, this.onEndGetAllClassesByDateDelegate, this.onGetAllClassesByDateCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginGetAllClassesByClassroom(int classroomID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllClassesByClassroom(classroomID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IClass.EndGetAllClassesByClassroom(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllClassesByClassroom(result);
    }
    
    private System.IAsyncResult OnBeginGetAllClassesByClassroom(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int classroomID = ((int)(inValues[0]));
        return ((IClass)(this)).BeginGetAllClassesByClassroom(classroomID, callback, asyncState);
    }
    
    private object[] OnEndGetAllClassesByClassroom(System.IAsyncResult result)
    {
        string retVal = ((IClass)(this)).EndGetAllClassesByClassroom(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllClassesByClassroomCompleted(object state)
    {
        if ((this.GetAllClassesByClassroomCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllClassesByClassroomCompleted(this, new GetAllClassesByClassroomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllClassesByClassroomAsync(int classroomID)
    {
        this.GetAllClassesByClassroomAsync(classroomID, null);
    }
    
    public void GetAllClassesByClassroomAsync(int classroomID, object userState)
    {
        if ((this.onBeginGetAllClassesByClassroomDelegate == null))
        {
            this.onBeginGetAllClassesByClassroomDelegate = new BeginOperationDelegate(this.OnBeginGetAllClassesByClassroom);
        }
        if ((this.onEndGetAllClassesByClassroomDelegate == null))
        {
            this.onEndGetAllClassesByClassroomDelegate = new EndOperationDelegate(this.OnEndGetAllClassesByClassroom);
        }
        if ((this.onGetAllClassesByClassroomCompletedDelegate == null))
        {
            this.onGetAllClassesByClassroomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClassesByClassroomCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllClassesByClassroomDelegate, new object[] {
                    classroomID}, this.onEndGetAllClassesByClassroomDelegate, this.onGetAllClassesByClassroomCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClass.BeginGetClassesByName(string name, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetClassesByName(name, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IClass.EndGetClassesByName(System.IAsyncResult result)
    {
        return base.Channel.EndGetClassesByName(result);
    }
    
    private System.IAsyncResult OnBeginGetClassesByName(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string name = ((string)(inValues[0]));
        return ((IClass)(this)).BeginGetClassesByName(name, callback, asyncState);
    }
    
    private object[] OnEndGetClassesByName(System.IAsyncResult result)
    {
        string retVal = ((IClass)(this)).EndGetClassesByName(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetClassesByNameCompleted(object state)
    {
        if ((this.GetClassesByNameCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetClassesByNameCompleted(this, new GetClassesByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetClassesByNameAsync(string name)
    {
        this.GetClassesByNameAsync(name, null);
    }
    
    public void GetClassesByNameAsync(string name, object userState)
    {
        if ((this.onBeginGetClassesByNameDelegate == null))
        {
            this.onBeginGetClassesByNameDelegate = new BeginOperationDelegate(this.OnBeginGetClassesByName);
        }
        if ((this.onEndGetClassesByNameDelegate == null))
        {
            this.onEndGetClassesByNameDelegate = new EndOperationDelegate(this.OnEndGetClassesByName);
        }
        if ((this.onGetClassesByNameCompletedDelegate == null))
        {
            this.onGetClassesByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClassesByNameCompleted);
        }
        base.InvokeAsync(this.onBeginGetClassesByNameDelegate, new object[] {
                    name}, this.onEndGetClassesByNameDelegate, this.onGetClassesByNameCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IClass CreateChannel()
    {
        return new ClassClientChannel(this);
    }
    
    private class ClassClientChannel : ChannelBase<IClass>, IClass
    {
        
        public ClassClientChannel(System.ServiceModel.ClientBase<IClass> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginAddClass(string newClass, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = newClass;
            System.IAsyncResult _result = base.BeginInvoke("AddClass", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndAddClass(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("AddClass", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDeleteClass(int classID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = classID;
            System.IAsyncResult _result = base.BeginInvoke("DeleteClass", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndDeleteClass(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("DeleteClass", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUpdateClass(string updatedClass, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = updatedClass;
            System.IAsyncResult _result = base.BeginInvoke("UpdateClass", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndUpdateClass(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("UpdateClass", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllClasses(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAllClasses", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllClasses(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllClasses", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllClassesByCourse(int courseID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = courseID;
            System.IAsyncResult _result = base.BeginInvoke("GetAllClassesByCourse", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllClassesByCourse(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllClassesByCourse", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllClassesByDate(System.DateTime classDate, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = classDate;
            System.IAsyncResult _result = base.BeginInvoke("GetAllClassesByDate", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllClassesByDate(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllClassesByDate", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllClassesByClassroom(int classroomID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = classroomID;
            System.IAsyncResult _result = base.BeginInvoke("GetAllClassesByClassroom", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllClassesByClassroom(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllClassesByClassroom", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetClassesByName(string name, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = name;
            System.IAsyncResult _result = base.BeginInvoke("GetClassesByName", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetClassesByName(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetClassesByName", _args, result)));
            return _result;
        }
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IClassRoom")]
public interface IClassRoom
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClassRoom/AddClassRoom", ReplyAction="http://tempuri.org/IClassRoom/AddClassRoomResponse")]
    System.IAsyncResult BeginAddClassRoom(string name, decimal longitude, decimal latitude, int campusID, System.AsyncCallback callback, object asyncState);
    
    bool EndAddClassRoom(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClassRoom/DeleteClassRoom", ReplyAction="http://tempuri.org/IClassRoom/DeleteClassRoomResponse")]
    System.IAsyncResult BeginDeleteClassRoom(int classroomID, System.AsyncCallback callback, object asyncState);
    
    bool EndDeleteClassRoom(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClassRoom/UpdateClassRoom", ReplyAction="http://tempuri.org/IClassRoom/UpdateClassRoomResponse")]
    System.IAsyncResult BeginUpdateClassRoom(string classRoomString, System.AsyncCallback callback, object asyncState);
    
    bool EndUpdateClassRoom(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClassRoom/GetAllClassRooms", ReplyAction="http://tempuri.org/IClassRoom/GetAllClassRoomsResponse")]
    System.IAsyncResult BeginGetAllClassRooms(System.AsyncCallback callback, object asyncState);
    
    string EndGetAllClassRooms(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClassRoom/GetAllClassRoomsByCampus", ReplyAction="http://tempuri.org/IClassRoom/GetAllClassRoomsByCampusResponse")]
    System.IAsyncResult BeginGetAllClassRoomsByCampus(int campusID, System.AsyncCallback callback, object asyncState);
    
    string EndGetAllClassRoomsByCampus(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IClassRoomChannel : IClassRoom, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddClassRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public AddClassRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteClassRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DeleteClassRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateClassRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateClassRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllClassRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllClassRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllClassRoomsByCampusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllClassRoomsByCampusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ClassRoomClient : System.ServiceModel.ClientBase<IClassRoom>, IClassRoom
{
    
    private BeginOperationDelegate onBeginAddClassRoomDelegate;
    
    private EndOperationDelegate onEndAddClassRoomDelegate;
    
    private System.Threading.SendOrPostCallback onAddClassRoomCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteClassRoomDelegate;
    
    private EndOperationDelegate onEndDeleteClassRoomDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteClassRoomCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateClassRoomDelegate;
    
    private EndOperationDelegate onEndUpdateClassRoomDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateClassRoomCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllClassRoomsDelegate;
    
    private EndOperationDelegate onEndGetAllClassRoomsDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllClassRoomsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllClassRoomsByCampusDelegate;
    
    private EndOperationDelegate onEndGetAllClassRoomsByCampusDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllClassRoomsByCampusCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public ClassRoomClient()
    {
    }
    
    public ClassRoomClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ClassRoomClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ClassRoomClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ClassRoomClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<AddClassRoomCompletedEventArgs> AddClassRoomCompleted;
    
    public event System.EventHandler<DeleteClassRoomCompletedEventArgs> DeleteClassRoomCompleted;
    
    public event System.EventHandler<UpdateClassRoomCompletedEventArgs> UpdateClassRoomCompleted;
    
    public event System.EventHandler<GetAllClassRoomsCompletedEventArgs> GetAllClassRoomsCompleted;
    
    public event System.EventHandler<GetAllClassRoomsByCampusCompletedEventArgs> GetAllClassRoomsByCampusCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClassRoom.BeginAddClassRoom(string name, decimal longitude, decimal latitude, int campusID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddClassRoom(name, longitude, latitude, campusID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IClassRoom.EndAddClassRoom(System.IAsyncResult result)
    {
        return base.Channel.EndAddClassRoom(result);
    }
    
    private System.IAsyncResult OnBeginAddClassRoom(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string name = ((string)(inValues[0]));
        decimal longitude = ((decimal)(inValues[1]));
        decimal latitude = ((decimal)(inValues[2]));
        int campusID = ((int)(inValues[3]));
        return ((IClassRoom)(this)).BeginAddClassRoom(name, longitude, latitude, campusID, callback, asyncState);
    }
    
    private object[] OnEndAddClassRoom(System.IAsyncResult result)
    {
        bool retVal = ((IClassRoom)(this)).EndAddClassRoom(result);
        return new object[] {
                retVal};
    }
    
    private void OnAddClassRoomCompleted(object state)
    {
        if ((this.AddClassRoomCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddClassRoomCompleted(this, new AddClassRoomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AddClassRoomAsync(string name, decimal longitude, decimal latitude, int campusID)
    {
        this.AddClassRoomAsync(name, longitude, latitude, campusID, null);
    }
    
    public void AddClassRoomAsync(string name, decimal longitude, decimal latitude, int campusID, object userState)
    {
        if ((this.onBeginAddClassRoomDelegate == null))
        {
            this.onBeginAddClassRoomDelegate = new BeginOperationDelegate(this.OnBeginAddClassRoom);
        }
        if ((this.onEndAddClassRoomDelegate == null))
        {
            this.onEndAddClassRoomDelegate = new EndOperationDelegate(this.OnEndAddClassRoom);
        }
        if ((this.onAddClassRoomCompletedDelegate == null))
        {
            this.onAddClassRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddClassRoomCompleted);
        }
        base.InvokeAsync(this.onBeginAddClassRoomDelegate, new object[] {
                    name,
                    longitude,
                    latitude,
                    campusID}, this.onEndAddClassRoomDelegate, this.onAddClassRoomCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClassRoom.BeginDeleteClassRoom(int classroomID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteClassRoom(classroomID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IClassRoom.EndDeleteClassRoom(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteClassRoom(result);
    }
    
    private System.IAsyncResult OnBeginDeleteClassRoom(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int classroomID = ((int)(inValues[0]));
        return ((IClassRoom)(this)).BeginDeleteClassRoom(classroomID, callback, asyncState);
    }
    
    private object[] OnEndDeleteClassRoom(System.IAsyncResult result)
    {
        bool retVal = ((IClassRoom)(this)).EndDeleteClassRoom(result);
        return new object[] {
                retVal};
    }
    
    private void OnDeleteClassRoomCompleted(object state)
    {
        if ((this.DeleteClassRoomCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteClassRoomCompleted(this, new DeleteClassRoomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteClassRoomAsync(int classroomID)
    {
        this.DeleteClassRoomAsync(classroomID, null);
    }
    
    public void DeleteClassRoomAsync(int classroomID, object userState)
    {
        if ((this.onBeginDeleteClassRoomDelegate == null))
        {
            this.onBeginDeleteClassRoomDelegate = new BeginOperationDelegate(this.OnBeginDeleteClassRoom);
        }
        if ((this.onEndDeleteClassRoomDelegate == null))
        {
            this.onEndDeleteClassRoomDelegate = new EndOperationDelegate(this.OnEndDeleteClassRoom);
        }
        if ((this.onDeleteClassRoomCompletedDelegate == null))
        {
            this.onDeleteClassRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteClassRoomCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteClassRoomDelegate, new object[] {
                    classroomID}, this.onEndDeleteClassRoomDelegate, this.onDeleteClassRoomCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClassRoom.BeginUpdateClassRoom(string classRoomString, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateClassRoom(classRoomString, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IClassRoom.EndUpdateClassRoom(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateClassRoom(result);
    }
    
    private System.IAsyncResult OnBeginUpdateClassRoom(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string classRoomString = ((string)(inValues[0]));
        return ((IClassRoom)(this)).BeginUpdateClassRoom(classRoomString, callback, asyncState);
    }
    
    private object[] OnEndUpdateClassRoom(System.IAsyncResult result)
    {
        bool retVal = ((IClassRoom)(this)).EndUpdateClassRoom(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateClassRoomCompleted(object state)
    {
        if ((this.UpdateClassRoomCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateClassRoomCompleted(this, new UpdateClassRoomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateClassRoomAsync(string classRoomString)
    {
        this.UpdateClassRoomAsync(classRoomString, null);
    }
    
    public void UpdateClassRoomAsync(string classRoomString, object userState)
    {
        if ((this.onBeginUpdateClassRoomDelegate == null))
        {
            this.onBeginUpdateClassRoomDelegate = new BeginOperationDelegate(this.OnBeginUpdateClassRoom);
        }
        if ((this.onEndUpdateClassRoomDelegate == null))
        {
            this.onEndUpdateClassRoomDelegate = new EndOperationDelegate(this.OnEndUpdateClassRoom);
        }
        if ((this.onUpdateClassRoomCompletedDelegate == null))
        {
            this.onUpdateClassRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateClassRoomCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateClassRoomDelegate, new object[] {
                    classRoomString}, this.onEndUpdateClassRoomDelegate, this.onUpdateClassRoomCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClassRoom.BeginGetAllClassRooms(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllClassRooms(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IClassRoom.EndGetAllClassRooms(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllClassRooms(result);
    }
    
    private System.IAsyncResult OnBeginGetAllClassRooms(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IClassRoom)(this)).BeginGetAllClassRooms(callback, asyncState);
    }
    
    private object[] OnEndGetAllClassRooms(System.IAsyncResult result)
    {
        string retVal = ((IClassRoom)(this)).EndGetAllClassRooms(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllClassRoomsCompleted(object state)
    {
        if ((this.GetAllClassRoomsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllClassRoomsCompleted(this, new GetAllClassRoomsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllClassRoomsAsync()
    {
        this.GetAllClassRoomsAsync(null);
    }
    
    public void GetAllClassRoomsAsync(object userState)
    {
        if ((this.onBeginGetAllClassRoomsDelegate == null))
        {
            this.onBeginGetAllClassRoomsDelegate = new BeginOperationDelegate(this.OnBeginGetAllClassRooms);
        }
        if ((this.onEndGetAllClassRoomsDelegate == null))
        {
            this.onEndGetAllClassRoomsDelegate = new EndOperationDelegate(this.OnEndGetAllClassRooms);
        }
        if ((this.onGetAllClassRoomsCompletedDelegate == null))
        {
            this.onGetAllClassRoomsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClassRoomsCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllClassRoomsDelegate, null, this.onEndGetAllClassRoomsDelegate, this.onGetAllClassRoomsCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IClassRoom.BeginGetAllClassRoomsByCampus(int campusID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllClassRoomsByCampus(campusID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IClassRoom.EndGetAllClassRoomsByCampus(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllClassRoomsByCampus(result);
    }
    
    private System.IAsyncResult OnBeginGetAllClassRoomsByCampus(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int campusID = ((int)(inValues[0]));
        return ((IClassRoom)(this)).BeginGetAllClassRoomsByCampus(campusID, callback, asyncState);
    }
    
    private object[] OnEndGetAllClassRoomsByCampus(System.IAsyncResult result)
    {
        string retVal = ((IClassRoom)(this)).EndGetAllClassRoomsByCampus(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllClassRoomsByCampusCompleted(object state)
    {
        if ((this.GetAllClassRoomsByCampusCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllClassRoomsByCampusCompleted(this, new GetAllClassRoomsByCampusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllClassRoomsByCampusAsync(int campusID)
    {
        this.GetAllClassRoomsByCampusAsync(campusID, null);
    }
    
    public void GetAllClassRoomsByCampusAsync(int campusID, object userState)
    {
        if ((this.onBeginGetAllClassRoomsByCampusDelegate == null))
        {
            this.onBeginGetAllClassRoomsByCampusDelegate = new BeginOperationDelegate(this.OnBeginGetAllClassRoomsByCampus);
        }
        if ((this.onEndGetAllClassRoomsByCampusDelegate == null))
        {
            this.onEndGetAllClassRoomsByCampusDelegate = new EndOperationDelegate(this.OnEndGetAllClassRoomsByCampus);
        }
        if ((this.onGetAllClassRoomsByCampusCompletedDelegate == null))
        {
            this.onGetAllClassRoomsByCampusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllClassRoomsByCampusCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllClassRoomsByCampusDelegate, new object[] {
                    campusID}, this.onEndGetAllClassRoomsByCampusDelegate, this.onGetAllClassRoomsByCampusCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IClassRoom CreateChannel()
    {
        return new ClassRoomClientChannel(this);
    }
    
    private class ClassRoomClientChannel : ChannelBase<IClassRoom>, IClassRoom
    {
        
        public ClassRoomClientChannel(System.ServiceModel.ClientBase<IClassRoom> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginAddClassRoom(string name, decimal longitude, decimal latitude, int campusID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[4];
            _args[0] = name;
            _args[1] = longitude;
            _args[2] = latitude;
            _args[3] = campusID;
            System.IAsyncResult _result = base.BeginInvoke("AddClassRoom", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndAddClassRoom(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("AddClassRoom", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDeleteClassRoom(int classroomID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = classroomID;
            System.IAsyncResult _result = base.BeginInvoke("DeleteClassRoom", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndDeleteClassRoom(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("DeleteClassRoom", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUpdateClassRoom(string classRoomString, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = classRoomString;
            System.IAsyncResult _result = base.BeginInvoke("UpdateClassRoom", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndUpdateClassRoom(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("UpdateClassRoom", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllClassRooms(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAllClassRooms", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllClassRooms(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllClassRooms", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllClassRoomsByCampus(int campusID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = campusID;
            System.IAsyncResult _result = base.BeginInvoke("GetAllClassRoomsByCampus", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllClassRoomsByCampus(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllClassRoomsByCampus", _args, result)));
            return _result;
        }
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ICourse")]
public interface ICourse
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICourse/AddCourse", ReplyAction="http://tempuri.org/ICourse/AddCourseResponse")]
    System.IAsyncResult BeginAddCourse(string courseCode, string name, System.AsyncCallback callback, object asyncState);
    
    bool EndAddCourse(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICourse/DeleteCourse", ReplyAction="http://tempuri.org/ICourse/DeleteCourseResponse")]
    System.IAsyncResult BeginDeleteCourse(int courseID, System.AsyncCallback callback, object asyncState);
    
    bool EndDeleteCourse(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICourse/UpdateCourse", ReplyAction="http://tempuri.org/ICourse/UpdateCourseResponse")]
    System.IAsyncResult BeginUpdateCourse(string courseString, System.AsyncCallback callback, object asyncState);
    
    bool EndUpdateCourse(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICourse/GetAllCourses", ReplyAction="http://tempuri.org/ICourse/GetAllCoursesResponse")]
    System.IAsyncResult BeginGetAllCourses(System.AsyncCallback callback, object asyncState);
    
    string EndGetAllCourses(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ICourseChannel : ICourse, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public AddCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DeleteCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllCoursesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllCoursesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CourseClient : System.ServiceModel.ClientBase<ICourse>, ICourse
{
    
    private BeginOperationDelegate onBeginAddCourseDelegate;
    
    private EndOperationDelegate onEndAddCourseDelegate;
    
    private System.Threading.SendOrPostCallback onAddCourseCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteCourseDelegate;
    
    private EndOperationDelegate onEndDeleteCourseDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteCourseCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateCourseDelegate;
    
    private EndOperationDelegate onEndUpdateCourseDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateCourseCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllCoursesDelegate;
    
    private EndOperationDelegate onEndGetAllCoursesDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllCoursesCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public CourseClient()
    {
    }
    
    public CourseClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public CourseClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CourseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CourseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<AddCourseCompletedEventArgs> AddCourseCompleted;
    
    public event System.EventHandler<DeleteCourseCompletedEventArgs> DeleteCourseCompleted;
    
    public event System.EventHandler<UpdateCourseCompletedEventArgs> UpdateCourseCompleted;
    
    public event System.EventHandler<GetAllCoursesCompletedEventArgs> GetAllCoursesCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICourse.BeginAddCourse(string courseCode, string name, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddCourse(courseCode, name, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool ICourse.EndAddCourse(System.IAsyncResult result)
    {
        return base.Channel.EndAddCourse(result);
    }
    
    private System.IAsyncResult OnBeginAddCourse(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string courseCode = ((string)(inValues[0]));
        string name = ((string)(inValues[1]));
        return ((ICourse)(this)).BeginAddCourse(courseCode, name, callback, asyncState);
    }
    
    private object[] OnEndAddCourse(System.IAsyncResult result)
    {
        bool retVal = ((ICourse)(this)).EndAddCourse(result);
        return new object[] {
                retVal};
    }
    
    private void OnAddCourseCompleted(object state)
    {
        if ((this.AddCourseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddCourseCompleted(this, new AddCourseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AddCourseAsync(string courseCode, string name)
    {
        this.AddCourseAsync(courseCode, name, null);
    }
    
    public void AddCourseAsync(string courseCode, string name, object userState)
    {
        if ((this.onBeginAddCourseDelegate == null))
        {
            this.onBeginAddCourseDelegate = new BeginOperationDelegate(this.OnBeginAddCourse);
        }
        if ((this.onEndAddCourseDelegate == null))
        {
            this.onEndAddCourseDelegate = new EndOperationDelegate(this.OnEndAddCourse);
        }
        if ((this.onAddCourseCompletedDelegate == null))
        {
            this.onAddCourseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCourseCompleted);
        }
        base.InvokeAsync(this.onBeginAddCourseDelegate, new object[] {
                    courseCode,
                    name}, this.onEndAddCourseDelegate, this.onAddCourseCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICourse.BeginDeleteCourse(int courseID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteCourse(courseID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool ICourse.EndDeleteCourse(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteCourse(result);
    }
    
    private System.IAsyncResult OnBeginDeleteCourse(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int courseID = ((int)(inValues[0]));
        return ((ICourse)(this)).BeginDeleteCourse(courseID, callback, asyncState);
    }
    
    private object[] OnEndDeleteCourse(System.IAsyncResult result)
    {
        bool retVal = ((ICourse)(this)).EndDeleteCourse(result);
        return new object[] {
                retVal};
    }
    
    private void OnDeleteCourseCompleted(object state)
    {
        if ((this.DeleteCourseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteCourseCompleted(this, new DeleteCourseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteCourseAsync(int courseID)
    {
        this.DeleteCourseAsync(courseID, null);
    }
    
    public void DeleteCourseAsync(int courseID, object userState)
    {
        if ((this.onBeginDeleteCourseDelegate == null))
        {
            this.onBeginDeleteCourseDelegate = new BeginOperationDelegate(this.OnBeginDeleteCourse);
        }
        if ((this.onEndDeleteCourseDelegate == null))
        {
            this.onEndDeleteCourseDelegate = new EndOperationDelegate(this.OnEndDeleteCourse);
        }
        if ((this.onDeleteCourseCompletedDelegate == null))
        {
            this.onDeleteCourseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCourseCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteCourseDelegate, new object[] {
                    courseID}, this.onEndDeleteCourseDelegate, this.onDeleteCourseCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICourse.BeginUpdateCourse(string courseString, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateCourse(courseString, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool ICourse.EndUpdateCourse(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateCourse(result);
    }
    
    private System.IAsyncResult OnBeginUpdateCourse(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string courseString = ((string)(inValues[0]));
        return ((ICourse)(this)).BeginUpdateCourse(courseString, callback, asyncState);
    }
    
    private object[] OnEndUpdateCourse(System.IAsyncResult result)
    {
        bool retVal = ((ICourse)(this)).EndUpdateCourse(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateCourseCompleted(object state)
    {
        if ((this.UpdateCourseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateCourseCompleted(this, new UpdateCourseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateCourseAsync(string courseString)
    {
        this.UpdateCourseAsync(courseString, null);
    }
    
    public void UpdateCourseAsync(string courseString, object userState)
    {
        if ((this.onBeginUpdateCourseDelegate == null))
        {
            this.onBeginUpdateCourseDelegate = new BeginOperationDelegate(this.OnBeginUpdateCourse);
        }
        if ((this.onEndUpdateCourseDelegate == null))
        {
            this.onEndUpdateCourseDelegate = new EndOperationDelegate(this.OnEndUpdateCourse);
        }
        if ((this.onUpdateCourseCompletedDelegate == null))
        {
            this.onUpdateCourseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCourseCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateCourseDelegate, new object[] {
                    courseString}, this.onEndUpdateCourseDelegate, this.onUpdateCourseCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ICourse.BeginGetAllCourses(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllCourses(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string ICourse.EndGetAllCourses(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllCourses(result);
    }
    
    private System.IAsyncResult OnBeginGetAllCourses(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((ICourse)(this)).BeginGetAllCourses(callback, asyncState);
    }
    
    private object[] OnEndGetAllCourses(System.IAsyncResult result)
    {
        string retVal = ((ICourse)(this)).EndGetAllCourses(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllCoursesCompleted(object state)
    {
        if ((this.GetAllCoursesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllCoursesCompleted(this, new GetAllCoursesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllCoursesAsync()
    {
        this.GetAllCoursesAsync(null);
    }
    
    public void GetAllCoursesAsync(object userState)
    {
        if ((this.onBeginGetAllCoursesDelegate == null))
        {
            this.onBeginGetAllCoursesDelegate = new BeginOperationDelegate(this.OnBeginGetAllCourses);
        }
        if ((this.onEndGetAllCoursesDelegate == null))
        {
            this.onEndGetAllCoursesDelegate = new EndOperationDelegate(this.OnEndGetAllCourses);
        }
        if ((this.onGetAllCoursesCompletedDelegate == null))
        {
            this.onGetAllCoursesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCoursesCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllCoursesDelegate, null, this.onEndGetAllCoursesDelegate, this.onGetAllCoursesCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override ICourse CreateChannel()
    {
        return new CourseClientChannel(this);
    }
    
    private class CourseClientChannel : ChannelBase<ICourse>, ICourse
    {
        
        public CourseClientChannel(System.ServiceModel.ClientBase<ICourse> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginAddCourse(string courseCode, string name, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[2];
            _args[0] = courseCode;
            _args[1] = name;
            System.IAsyncResult _result = base.BeginInvoke("AddCourse", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndAddCourse(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("AddCourse", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDeleteCourse(int courseID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = courseID;
            System.IAsyncResult _result = base.BeginInvoke("DeleteCourse", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndDeleteCourse(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("DeleteCourse", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUpdateCourse(string courseString, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = courseString;
            System.IAsyncResult _result = base.BeginInvoke("UpdateCourse", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndUpdateCourse(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("UpdateCourse", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllCourses(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAllCourses", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllCourses(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllCourses", _args, result)));
            return _result;
        }
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IUser")]
public interface IUser
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/AddLecturer", ReplyAction="http://tempuri.org/IUser/AddLecturerResponse")]
    System.IAsyncResult BeginAddLecturer(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, System.AsyncCallback callback, object asyncState);
    
    bool EndAddLecturer(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/AddStaffUser", ReplyAction="http://tempuri.org/IUser/AddStaffUserResponse")]
    System.IAsyncResult BeginAddStaffUser(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, System.AsyncCallback callback, object asyncState);
    
    bool EndAddStaffUser(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/AddStudent", ReplyAction="http://tempuri.org/IUser/AddStudentResponse")]
    System.IAsyncResult BeginAddStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState);
    
    bool EndAddStudent(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/DeleteUser", ReplyAction="http://tempuri.org/IUser/DeleteUserResponse")]
    System.IAsyncResult BeginDeleteUser(int userID, System.AsyncCallback callback, object asyncState);
    
    bool EndDeleteUser(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/UpdateUser", ReplyAction="http://tempuri.org/IUser/UpdateUserResponse")]
    System.IAsyncResult BeginUpdateUser(string userString, System.AsyncCallback callback, object asyncState);
    
    bool EndUpdateUser(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUser/GetAllUsersOfType", ReplyAction="http://tempuri.org/IUser/GetAllUsersOfTypeResponse")]
    System.IAsyncResult BeginGetAllUsersOfType(string typeString, System.AsyncCallback callback, object asyncState);
    
    string EndGetAllUsersOfType(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IUserChannel : IUser, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddLecturerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public AddLecturerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddStaffUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public AddStaffUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AddStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public AddStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllUsersOfTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllUsersOfTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UserClient : System.ServiceModel.ClientBase<IUser>, IUser
{
    
    private BeginOperationDelegate onBeginAddLecturerDelegate;
    
    private EndOperationDelegate onEndAddLecturerDelegate;
    
    private System.Threading.SendOrPostCallback onAddLecturerCompletedDelegate;
    
    private BeginOperationDelegate onBeginAddStaffUserDelegate;
    
    private EndOperationDelegate onEndAddStaffUserDelegate;
    
    private System.Threading.SendOrPostCallback onAddStaffUserCompletedDelegate;
    
    private BeginOperationDelegate onBeginAddStudentDelegate;
    
    private EndOperationDelegate onEndAddStudentDelegate;
    
    private System.Threading.SendOrPostCallback onAddStudentCompletedDelegate;
    
    private BeginOperationDelegate onBeginDeleteUserDelegate;
    
    private EndOperationDelegate onEndDeleteUserDelegate;
    
    private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateUserDelegate;
    
    private EndOperationDelegate onEndUpdateUserDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateUserCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllUsersOfTypeDelegate;
    
    private EndOperationDelegate onEndGetAllUsersOfTypeDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllUsersOfTypeCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public UserClient()
    {
    }
    
    public UserClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public UserClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<AddLecturerCompletedEventArgs> AddLecturerCompleted;
    
    public event System.EventHandler<AddStaffUserCompletedEventArgs> AddStaffUserCompleted;
    
    public event System.EventHandler<AddStudentCompletedEventArgs> AddStudentCompleted;
    
    public event System.EventHandler<DeleteUserCompletedEventArgs> DeleteUserCompleted;
    
    public event System.EventHandler<UpdateUserCompletedEventArgs> UpdateUserCompleted;
    
    public event System.EventHandler<GetAllUsersOfTypeCompletedEventArgs> GetAllUsersOfTypeCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IUser.BeginAddLecturer(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddLecturer(title, staffNumber, firstName, surname, email, password, isSysAdmin, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IUser.EndAddLecturer(System.IAsyncResult result)
    {
        return base.Channel.EndAddLecturer(result);
    }
    
    private System.IAsyncResult OnBeginAddLecturer(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string title = ((string)(inValues[0]));
        string staffNumber = ((string)(inValues[1]));
        string firstName = ((string)(inValues[2]));
        string surname = ((string)(inValues[3]));
        string email = ((string)(inValues[4]));
        string password = ((string)(inValues[5]));
        bool isSysAdmin = ((bool)(inValues[6]));
        return ((IUser)(this)).BeginAddLecturer(title, staffNumber, firstName, surname, email, password, isSysAdmin, callback, asyncState);
    }
    
    private object[] OnEndAddLecturer(System.IAsyncResult result)
    {
        bool retVal = ((IUser)(this)).EndAddLecturer(result);
        return new object[] {
                retVal};
    }
    
    private void OnAddLecturerCompleted(object state)
    {
        if ((this.AddLecturerCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddLecturerCompleted(this, new AddLecturerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AddLecturerAsync(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin)
    {
        this.AddLecturerAsync(title, staffNumber, firstName, surname, email, password, isSysAdmin, null);
    }
    
    public void AddLecturerAsync(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, object userState)
    {
        if ((this.onBeginAddLecturerDelegate == null))
        {
            this.onBeginAddLecturerDelegate = new BeginOperationDelegate(this.OnBeginAddLecturer);
        }
        if ((this.onEndAddLecturerDelegate == null))
        {
            this.onEndAddLecturerDelegate = new EndOperationDelegate(this.OnEndAddLecturer);
        }
        if ((this.onAddLecturerCompletedDelegate == null))
        {
            this.onAddLecturerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLecturerCompleted);
        }
        base.InvokeAsync(this.onBeginAddLecturerDelegate, new object[] {
                    title,
                    staffNumber,
                    firstName,
                    surname,
                    email,
                    password,
                    isSysAdmin}, this.onEndAddLecturerDelegate, this.onAddLecturerCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IUser.BeginAddStaffUser(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddStaffUser(staffNumber, firstName, surname, email, password, isSysAdmin, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IUser.EndAddStaffUser(System.IAsyncResult result)
    {
        return base.Channel.EndAddStaffUser(result);
    }
    
    private System.IAsyncResult OnBeginAddStaffUser(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string staffNumber = ((string)(inValues[0]));
        string firstName = ((string)(inValues[1]));
        string surname = ((string)(inValues[2]));
        string email = ((string)(inValues[3]));
        string password = ((string)(inValues[4]));
        bool isSysAdmin = ((bool)(inValues[5]));
        return ((IUser)(this)).BeginAddStaffUser(staffNumber, firstName, surname, email, password, isSysAdmin, callback, asyncState);
    }
    
    private object[] OnEndAddStaffUser(System.IAsyncResult result)
    {
        bool retVal = ((IUser)(this)).EndAddStaffUser(result);
        return new object[] {
                retVal};
    }
    
    private void OnAddStaffUserCompleted(object state)
    {
        if ((this.AddStaffUserCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddStaffUserCompleted(this, new AddStaffUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AddStaffUserAsync(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin)
    {
        this.AddStaffUserAsync(staffNumber, firstName, surname, email, password, isSysAdmin, null);
    }
    
    public void AddStaffUserAsync(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, object userState)
    {
        if ((this.onBeginAddStaffUserDelegate == null))
        {
            this.onBeginAddStaffUserDelegate = new BeginOperationDelegate(this.OnBeginAddStaffUser);
        }
        if ((this.onEndAddStaffUserDelegate == null))
        {
            this.onEndAddStaffUserDelegate = new EndOperationDelegate(this.OnEndAddStaffUser);
        }
        if ((this.onAddStaffUserCompletedDelegate == null))
        {
            this.onAddStaffUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStaffUserCompleted);
        }
        base.InvokeAsync(this.onBeginAddStaffUserDelegate, new object[] {
                    staffNumber,
                    firstName,
                    surname,
                    email,
                    password,
                    isSysAdmin}, this.onEndAddStaffUserDelegate, this.onAddStaffUserCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IUser.BeginAddStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginAddStudent(studentNumber, firstName, surname, email, password, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IUser.EndAddStudent(System.IAsyncResult result)
    {
        return base.Channel.EndAddStudent(result);
    }
    
    private System.IAsyncResult OnBeginAddStudent(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string studentNumber = ((string)(inValues[0]));
        string firstName = ((string)(inValues[1]));
        string surname = ((string)(inValues[2]));
        string email = ((string)(inValues[3]));
        string password = ((string)(inValues[4]));
        return ((IUser)(this)).BeginAddStudent(studentNumber, firstName, surname, email, password, callback, asyncState);
    }
    
    private object[] OnEndAddStudent(System.IAsyncResult result)
    {
        bool retVal = ((IUser)(this)).EndAddStudent(result);
        return new object[] {
                retVal};
    }
    
    private void OnAddStudentCompleted(object state)
    {
        if ((this.AddStudentCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.AddStudentCompleted(this, new AddStudentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void AddStudentAsync(string studentNumber, string firstName, string surname, string email, string password)
    {
        this.AddStudentAsync(studentNumber, firstName, surname, email, password, null);
    }
    
    public void AddStudentAsync(string studentNumber, string firstName, string surname, string email, string password, object userState)
    {
        if ((this.onBeginAddStudentDelegate == null))
        {
            this.onBeginAddStudentDelegate = new BeginOperationDelegate(this.OnBeginAddStudent);
        }
        if ((this.onEndAddStudentDelegate == null))
        {
            this.onEndAddStudentDelegate = new EndOperationDelegate(this.OnEndAddStudent);
        }
        if ((this.onAddStudentCompletedDelegate == null))
        {
            this.onAddStudentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStudentCompleted);
        }
        base.InvokeAsync(this.onBeginAddStudentDelegate, new object[] {
                    studentNumber,
                    firstName,
                    surname,
                    email,
                    password}, this.onEndAddStudentDelegate, this.onAddStudentCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IUser.BeginDeleteUser(int userID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDeleteUser(userID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IUser.EndDeleteUser(System.IAsyncResult result)
    {
        return base.Channel.EndDeleteUser(result);
    }
    
    private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int userID = ((int)(inValues[0]));
        return ((IUser)(this)).BeginDeleteUser(userID, callback, asyncState);
    }
    
    private object[] OnEndDeleteUser(System.IAsyncResult result)
    {
        bool retVal = ((IUser)(this)).EndDeleteUser(result);
        return new object[] {
                retVal};
    }
    
    private void OnDeleteUserCompleted(object state)
    {
        if ((this.DeleteUserCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DeleteUserAsync(int userID)
    {
        this.DeleteUserAsync(userID, null);
    }
    
    public void DeleteUserAsync(int userID, object userState)
    {
        if ((this.onBeginDeleteUserDelegate == null))
        {
            this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
        }
        if ((this.onEndDeleteUserDelegate == null))
        {
            this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
        }
        if ((this.onDeleteUserCompletedDelegate == null))
        {
            this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
        }
        base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                    userID}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IUser.BeginUpdateUser(string userString, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateUser(userString, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IUser.EndUpdateUser(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateUser(result);
    }
    
    private System.IAsyncResult OnBeginUpdateUser(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string userString = ((string)(inValues[0]));
        return ((IUser)(this)).BeginUpdateUser(userString, callback, asyncState);
    }
    
    private object[] OnEndUpdateUser(System.IAsyncResult result)
    {
        bool retVal = ((IUser)(this)).EndUpdateUser(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateUserCompleted(object state)
    {
        if ((this.UpdateUserCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateUserAsync(string userString)
    {
        this.UpdateUserAsync(userString, null);
    }
    
    public void UpdateUserAsync(string userString, object userState)
    {
        if ((this.onBeginUpdateUserDelegate == null))
        {
            this.onBeginUpdateUserDelegate = new BeginOperationDelegate(this.OnBeginUpdateUser);
        }
        if ((this.onEndUpdateUserDelegate == null))
        {
            this.onEndUpdateUserDelegate = new EndOperationDelegate(this.OnEndUpdateUser);
        }
        if ((this.onUpdateUserCompletedDelegate == null))
        {
            this.onUpdateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateUserDelegate, new object[] {
                    userString}, this.onEndUpdateUserDelegate, this.onUpdateUserCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IUser.BeginGetAllUsersOfType(string typeString, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllUsersOfType(typeString, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    string IUser.EndGetAllUsersOfType(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllUsersOfType(result);
    }
    
    private System.IAsyncResult OnBeginGetAllUsersOfType(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string typeString = ((string)(inValues[0]));
        return ((IUser)(this)).BeginGetAllUsersOfType(typeString, callback, asyncState);
    }
    
    private object[] OnEndGetAllUsersOfType(System.IAsyncResult result)
    {
        string retVal = ((IUser)(this)).EndGetAllUsersOfType(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllUsersOfTypeCompleted(object state)
    {
        if ((this.GetAllUsersOfTypeCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllUsersOfTypeCompleted(this, new GetAllUsersOfTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllUsersOfTypeAsync(string typeString)
    {
        this.GetAllUsersOfTypeAsync(typeString, null);
    }
    
    public void GetAllUsersOfTypeAsync(string typeString, object userState)
    {
        if ((this.onBeginGetAllUsersOfTypeDelegate == null))
        {
            this.onBeginGetAllUsersOfTypeDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsersOfType);
        }
        if ((this.onEndGetAllUsersOfTypeDelegate == null))
        {
            this.onEndGetAllUsersOfTypeDelegate = new EndOperationDelegate(this.OnEndGetAllUsersOfType);
        }
        if ((this.onGetAllUsersOfTypeCompletedDelegate == null))
        {
            this.onGetAllUsersOfTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOfTypeCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllUsersOfTypeDelegate, new object[] {
                    typeString}, this.onEndGetAllUsersOfTypeDelegate, this.onGetAllUsersOfTypeCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IUser CreateChannel()
    {
        return new UserClientChannel(this);
    }
    
    private class UserClientChannel : ChannelBase<IUser>, IUser
    {
        
        public UserClientChannel(System.ServiceModel.ClientBase<IUser> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginAddLecturer(string title, string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[7];
            _args[0] = title;
            _args[1] = staffNumber;
            _args[2] = firstName;
            _args[3] = surname;
            _args[4] = email;
            _args[5] = password;
            _args[6] = isSysAdmin;
            System.IAsyncResult _result = base.BeginInvoke("AddLecturer", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndAddLecturer(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("AddLecturer", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginAddStaffUser(string staffNumber, string firstName, string surname, string email, string password, bool isSysAdmin, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[6];
            _args[0] = staffNumber;
            _args[1] = firstName;
            _args[2] = surname;
            _args[3] = email;
            _args[4] = password;
            _args[5] = isSysAdmin;
            System.IAsyncResult _result = base.BeginInvoke("AddStaffUser", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndAddStaffUser(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("AddStaffUser", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginAddStudent(string studentNumber, string firstName, string surname, string email, string password, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[5];
            _args[0] = studentNumber;
            _args[1] = firstName;
            _args[2] = surname;
            _args[3] = email;
            _args[4] = password;
            System.IAsyncResult _result = base.BeginInvoke("AddStudent", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndAddStudent(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("AddStudent", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginDeleteUser(int userID, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = userID;
            System.IAsyncResult _result = base.BeginInvoke("DeleteUser", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndDeleteUser(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("DeleteUser", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUpdateUser(string userString, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = userString;
            System.IAsyncResult _result = base.BeginInvoke("UpdateUser", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndUpdateUser(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("UpdateUser", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetAllUsersOfType(string typeString, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = typeString;
            System.IAsyncResult _result = base.BeginInvoke("GetAllUsersOfType", _args, callback, asyncState);
            return _result;
        }
        
        public string EndGetAllUsersOfType(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            string _result = ((string)(base.EndInvoke("GetAllUsersOfType", _args, result)));
            return _result;
        }
    }
}
